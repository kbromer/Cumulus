<apex:page controller="STG_PanelERR_CTRL">
 
    <script>
        /* 
         * We are using JavaScript instead of the Rerender atrribute of Visualforce components because of the 
         * impossibility to rerender elements based on a specific dropdown (apex:selectList) value.
         */
        var errNotif = {}
        jerr$ = jQuery.noConflict();

        errNotif.hideNotifDisplayName = function() { jerr$('[id$=errorNotifDisplayName]').hide(); }
        errNotif.showNotifDisplayName = function() { jerr$('[id$=errorNotifDisplayName]').show(); }

        errNotif.hideNotifDropDown = function() { jerr$('select[id$=notificationOption]').hide(); }
        errNotif.showNotifDropDown = function() { jerr$('select[id$=notificationOption]').show(); }
        
        errNotif.hideChatterGroupBox =  function() { jerr$('span[id$=chatterGroupBox]').hide(); }
        errNotif.showChatterGroupBox = function() { jerr$('span[id$=chatterGroupBox]').show(); }
                
        //initially hiding the auto-complete chatter group textarea
        jerr$(document).ready(function() {
            errNotif.hideNotifDropDown();   
            errNotif.hideChatterGroupBox();
        });
        
        //detecting click action on edit button
        /*jerr$(document).on('click', 'input[id$=editNotif]', function() {
            var errorNotifDisplay = jerr$('[id$=errorNotifDisplayName]').text();
            console.log('Text of errorNotifDisplayName box: ' + errorNotifDisplay);
            errNotif.hideNotifDisplayName();
            errNotif.showNotifDropDown();
            if(errorNotifDisplay.indexOf('Group:') >= 0) {
                jerr$('select[id$=notificationOption]').val('Chatter Group');
                errNotif.showChatterGroupBox();
            }
        });*/
        
        //detecting changes to the recipients drop-down
        jerr$(document).on('change', 'select[id$=notificationOption]', function() {         
            if(jerr$('select[id$=notificationOption]').find(':selected').text() == 'Chatter Group') {
                errNotif.showChatterGroupBox();
            } else {
                errNotif.hideChatterGroupBox();
            }
        });
        
        //detecting click action on save button
        jerr$(document).on('click', 'input[id$=saveNotif]', function() {
            var dropDownValue = jerr$('select[id$=notificationOption]').find(':selected').text();
            console.log('Dropdown value: ' + dropDownValue);
            var chatterGroupId = jerr$.trim(jerr$('input[id$=groupId]').val());
            console.log('Chatter group Id: ' + chatterGroupId);
            if(dropDownValue != 'Chatter Group' || (dropDownValue == 'Chatter Group' && chatterGroupId.length > 0)) { 
                errNotif.hideChatterGroupBox();
            }
            errNotif.showNotifDisplayName();
        });
        
        //detecting click action on cancel button
        jerr$(document).on('click', 'input[id$=cancelNotif]', function() { 
            //errNotif.hideNotifDropDown();
            errNotif.hideChatterGroupBox();
        });
   </script>
     
    <apex:form id="form">   
        <apex:sectionHeader title="{!$Label.stgNavSystem}" subtitle="{!$Label.stgNavErrorNotify}" />        
        <apex:pageMessages id="pageMessages"/>
        <apex:pageBlock mode="maindetail">
 
            <apex:panelGrid id="fields" columns="3" columnClasses="propLabel, propEdit, propHelpText" >
                
                <apex:outputLabel value="{!$ObjectType.Error_Settings__c.Fields.Store_Errors_On__c.Label}" for="cbxSEO" />
                <apex:inputCheckbox value="{!stgService.stgErr.Store_Errors_On__c}" disabled="{!isReadOnlyMode}" id="cbxSEO" />
                <apex:outputLabel value="{!$Label.stgHelpStoreErrorsOn}" />
                
                <apex:outputLabel value="{!$ObjectType.Error_Settings__c.Fields.Error_Notifications_On__c.Label}" for="cbxENO" />
                <apex:inputCheckbox value="{!stgService.stgErr.Error_Notifications_On__c}" disabled="{!isReadOnlyMode}" id="cbxENO" />
                <apex:outputLabel value="{!$Label.stgHelpErrorNotifyOn}" />
                
                <apex:outputLabel id="recipientLabel" value="{!$ObjectType.Error_Settings__c.Fields.Error_Notifications_To__c.Label}" for="notificationOption" />
                
                <apex:outputPanel id="errRecipient">
	                <apex:outputLabel id="errorNotifDisplayName" value="{!strErrorNotifDisplayName}" rendered="{!isReadOnlyMode}" />
	                <apex:selectList id="notificationOption" value="{!notificationToDropDown}" size="1" multiselect="false" rendered="{!isEditMode}">
	                    <apex:selectOptions value="{!listSOERRNotifOptions}" />
	                </apex:selectList>
                </apex:outputPanel>
                
                <apex:outputLabel id="recipientHelp" value="{!$Label.stgHelpErrorNotifyTo}" />
            </apex:panelGrid>
             
            <apex:outputPanel id="chatterGroupBox">
                <apex:panelGrid columns="3" columnClasses="propLabel, propEdit, propHelpText">
                    <apex:outputLabel value="{!$Label.stgLabelSelectChatterGroup}" for="chatterGroupSearchBox" />
                    <c:UTIL_Typeahead searchBoxId="chatterGroupSearchBox" object="CollaborationGroup" primaryField="Name" searchScope="NAME"
                        placeholder="{!$Label.stgLabelTypeAhead}" minSearchLength="2" destinationForSelectedId="groupId" stealFocus="false" 
                        style="width:80%;" /> 
                    <apex:outputLabel value="{!$Label.stgHelpChatterGroup}"/>
                </apex:panelGrid>
                <apex:inputHidden id="groupId" value="{!groupId}" />
                <br/>
            </apex:outputPanel>  
            
            <div style="padding-left:25%; font-weight:bold; color: red;">
            <apex:outputPanel id="saveError">
                <apex:outputPanel rendered="{!NOT(ISNULL(saveErrorMessage))}">
                    <apex:outputText value="{!saveErrorMessage}" />
                </apex:outputPanel>
            </apex:outputPanel>
            </div>
              
            <br/>      
            <apex:pageBlockButtons location="both" >
                <apex:outputPanel id="commandButtons">
                    <apex:commandButton id="editNotif" value="{!$Label.stgBtnEdit}" status="statusLoad" action="{!editSettings}" 
                        rendered="{!isReadOnlyMode}" immediate="true" rerender="fields, commandButtons, saveError" />
                    <apex:commandButton id="saveNotif" value="{!$Label.stgBtnSave}" status="statusLoad" action="{!saveSettings}" 
                        rendered="{!isEditMode}" immediate="false" rerender="fields, commandButtons, saveError" />
                    <apex:commandButton id="cancelNotif" value="{!$Label.stgBtnCancel}" status="statusLoad" action="{!cancelEdit}" 
                        rendered="{!isEditMode}" immediate="true" rerender="fields, commandButtons, saveError" />
                </apex:outputPanel>
            </apex:pageBlockButtons>
     
        </apex:pageBlock>
    </apex:form>
     
</apex:page>